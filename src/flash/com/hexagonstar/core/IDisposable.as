/* * hexagonlib - Multi-Purpose ActionScript 3 Library. *       __    __ *    __/  \__/  \__    __ *   /  \__/HEXAGON \__/  \ *   \__/  \__/  LIBRARY _/ *            \__/  \__/ * * Licensed under the MIT License *  * Permission is hereby granted, free of charge, to any person obtaining a copy of * this software and associated documentation files (the "Software"), to deal in * the Software without restriction, including without limitation the rights to * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of * the Software, and to permit persons to whom the Software is furnished to do so, * subject to the following conditions: *  * The above copyright notice and this permission notice shall be included in all * copies or substantial portions of the Software. *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */package com.hexagonstar.core{	/**	 * The IDisposable Interface should be implemented by classes that can be disposable,	 * i.e. the class can be cleaned up for Garbage Collection which includes the removal	 * of Event Listeners etc.<br>	 * 	 * <p>When such a class is disposed by calling it's <code>dispose()</code> method it	 * should dispose any necessary properties so that they are available for garbage	 * collection and after that the <code>disposed</code> property needs to be set to	 * true to indicate that the class has been disposed and should not longer be used	 * unless it is re-instantiated.</p>	 */	public interface IDisposable	{		/**		 * Cleans up objects, removes any event listeners and stops all internal		 * processes to help allow for prompt garbage collection.		 */		function dispose():void;						/**		 * Determines if the object has been disposed (true), or is still available		 * for use (false).		*/		function get disposed():Boolean;	}}